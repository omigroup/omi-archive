{"speakers": [], "chunks": [{"timestamp": [0.0, 7.8], "text": " We're looking at the pull request on the audio emitter about shape type as a new property."}, {"timestamp": [7.8, 12.64], "text": " And shape type is defined as either a cone or any other shapes."}, {"timestamp": [12.84, 19.58], "text": " There can be a string that can define any shape that is relevant to an engine or whatever is interpreting it."}, {"timestamp": [20.48, 25.18], "text": " And the reason that this came about was there was some question about other shapes than cone."}, {"timestamp": [25.72, 33.1], "text": " Because in the spec, we define that there's the cone inner angle, cone outer angle, and all of these other things."}, {"timestamp": [33.14, 34.16], "text": " But it references a cone."}, {"timestamp": [35.34, 37.34], "text": " So yeah, this gives the option of other shapes."}, {"timestamp": [38.04, 43.9], "text": " So you can use this to define what a shape of an emitter is, an audio emitter."}, {"timestamp": [44.34, 48.4], "text": " Or you can use the other cone properties"}, {"timestamp": [48.4, 50.34], "text": " to deduce that it is a cone."}, {"timestamp": [50.34, 53.18], "text": " So yeah."}, {"timestamp": [53.18, 54.18], "text": " OK, cool."}, {"timestamp": [60.28, 64.4], "text": " So yeah, I started a screen share in case people"}, {"timestamp": [64.4, 66.02], "text": " want to check out some,"}, {"timestamp": [66.66, 68.46], "text": " in case you don't want to click on the links yourself."}, {"timestamp": [69.1, 74.62], "text": " But one of the points of making new standards is to have alignment"}, {"timestamp": [74.62, 80.06], "text": " where we try and not be radically different from every other standard group"}, {"timestamp": [80.06, 84.62], "text": " trying to do something and trying to support all the use cases and stuff."}, {"timestamp": [81.04, 84.12], "text": " trying to do something and trying to support all the use cases"}, {"timestamp": [84.12, 86.12], "text": " and stuff. And there's this"}, {"timestamp": [86.12, 86.86], "text": " other one"}, {"timestamp": [86.86, 90.12], "text": " here that is proposing"}, {"timestamp": [90.12, 91.88], "text": " that there be a string"}, {"timestamp": [91.88, 93.96], "text": " for a shape type that could be"}, {"timestamp": [93.96, 95.62], "text": " cone, omnidirectional, or custom."}, {"timestamp": [97.74, 99.68], "text": " And I think that makes sense."}, {"timestamp": [104.06, 104.62], "text": " So"}, {"timestamp": [104.62, 108.78], "text": " I figured maybe we should just add that to our one."}, {"timestamp": [108.78, 110.7], "text": " So then there's this pull request here."}, {"timestamp": [111.7, 114.78], "text": " If I look at the files changed, then we have..."}, {"timestamp": [116.68, 120.74], "text": " There's a few minor formatting changes mixed in"}, {"timestamp": [120.74, 124.44], "text": " because I don't want to bother submitting a pull request"}, {"timestamp": [124.44, 125.86], "text": " for just formatting changes."}, {"timestamp": [126.58, 131.72], "text": " And there's adding this shape type property to the list of all the other properties."}, {"timestamp": [132.42, 139.1], "text": " And if you're not familiar with this spec, we can talk through it a bit as well if you want."}, {"timestamp": [139.1, 146.88], "text": " But just to go through the addition quickly, previously, it was defined as always being a cone."}, {"timestamp": [146.88, 148.4], "text": " And if you wanted it to be omnidirectional,"}, {"timestamp": [148.4, 152.76], "text": " you would just make the cone angle be all directions."}, {"timestamp": [152.76, 154.16], "text": " And that is the default value."}, {"timestamp": [154.16, 156.08], "text": " So you could just not specify these properties."}, {"timestamp": [156.08, 157.54], "text": " And that would mean all directions."}, {"timestamp": [157.54, 162.0], "text": " But it's still technically a cone in terms"}, {"timestamp": [162.0, 170.54], "text": " of that these properties exist and just have default values. But with this, it's explicitly saying that omnidirectional is omnidirectional."}, {"timestamp": [171.22, 175.52], "text": " And therefore, you need to read this"}, {"timestamp": [175.52, 177.84], "text": " and determine if it's an omnidirectional or a cone."}, {"timestamp": [177.96, 180.78], "text": " And if it's omnidirectional, then these properties should be ignored."}, {"timestamp": [185.66, 187.88], "text": " And Git absolutely sucks"}, {"timestamp": [187.88, 189.86], "text": " at giving diffs, but here's"}, {"timestamp": [189.86, 191.46], "text": " the additional property. It says"}, {"timestamp": [191.46, 193.7], "text": " the shape type property is a string that defines"}, {"timestamp": [193.7, 196.0], "text": " the shape of the audio emitter, namely the omnidirectional"}, {"timestamp": [196.0, 197.78], "text": " cone or value specified custom"}, {"timestamp": [197.78, 199.86], "text": " extension, or by another"}, {"timestamp": [199.86, 201.8], "text": " extension. If not specified,"}, {"timestamp": [201.96, 203.46], "text": " the default shape is omnidirectional."}, {"timestamp": [206.52, 213.82], "text": " And in the example up here, I used"}, {"timestamp": [213.82, 217.98], "text": " to have these default values explicitly specified just"}, {"timestamp": [217.98, 220.14], "text": " so that people know where those go."}, {"timestamp": [220.14, 223.2], "text": " But since omnidirectional is explicit"}, {"timestamp": [223.2, 225.36], "text": " and these are not used when there's omnidirectional,"}, {"timestamp": [225.36, 229.76], "text": " then that is now showing this. And also this is the default as well, so you can"}, {"timestamp": [229.76, 232.4], "text": " just not include this and that it will mean omnidirectional anyway."}, {"timestamp": [233.2, 240.16], "text": " But this way I am explicitly showing people what the code example could look like. So if"}, {"timestamp": [240.16, 258.96], "text": " you wanted to swap this out with a different value, this is where it would go."}, {"timestamp": [261.64, 265.84], "text": " Yeah, makes sense to me. I don't see any implementation hangups on this at all."}], "text": " We're looking at the pull request on the audio emitter about shape type as a new property. And shape type is defined as either a cone or any other shapes. There can be a string that can define any shape that is relevant to an engine or whatever is interpreting it. And the reason that this came about was there was some question about other shapes than cone. Because in the spec, we define that there's the cone inner angle, cone outer angle, and all of these other things. But it references a cone. So yeah, this gives the option of other shapes. So you can use this to define what a shape of an emitter is, an audio emitter. Or you can use the other cone properties to deduce that it is a cone. So yeah. OK, cool. So yeah, I started a screen share in case people want to check out some, in case you don't want to click on the links yourself. But one of the points of making new standards is to have alignment where we try and not be radically different from every other standard group trying to do something and trying to support all the use cases and stuff. trying to do something and trying to support all the use cases and stuff. And there's this other one here that is proposing that there be a string for a shape type that could be cone, omnidirectional, or custom. And I think that makes sense. So I figured maybe we should just add that to our one. So then there's this pull request here. If I look at the files changed, then we have... There's a few minor formatting changes mixed in because I don't want to bother submitting a pull request for just formatting changes. And there's adding this shape type property to the list of all the other properties. And if you're not familiar with this spec, we can talk through it a bit as well if you want. But just to go through the addition quickly, previously, it was defined as always being a cone. And if you wanted it to be omnidirectional, you would just make the cone angle be all directions. And that is the default value. So you could just not specify these properties. And that would mean all directions. But it's still technically a cone in terms of that these properties exist and just have default values. But with this, it's explicitly saying that omnidirectional is omnidirectional. And therefore, you need to read this and determine if it's an omnidirectional or a cone. And if it's omnidirectional, then these properties should be ignored. And Git absolutely sucks at giving diffs, but here's the additional property. It says the shape type property is a string that defines the shape of the audio emitter, namely the omnidirectional cone or value specified custom extension, or by another extension. If not specified, the default shape is omnidirectional. And in the example up here, I used to have these default values explicitly specified just so that people know where those go. But since omnidirectional is explicit and these are not used when there's omnidirectional, then that is now showing this. And also this is the default as well, so you can just not include this and that it will mean omnidirectional anyway. But this way I am explicitly showing people what the code example could look like. So if you wanted to swap this out with a different value, this is where it would go. Yeah, makes sense to me. I don't see any implementation hangups on this at all."}